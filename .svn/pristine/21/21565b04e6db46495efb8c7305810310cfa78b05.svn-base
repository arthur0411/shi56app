package com.flf.controller;

import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.flf.entity.ShopOrderPayment;
import com.flf.entity.ShopOrderPaymentVo;
import com.flf.service.ShopOrderPaymentService;

/**
 * 
 * <br>
 * <b>功能：</b>ShopOrderPaymentController<br>
 * <br>
 */
@Controller
@RequestMapping(value = "/orderPayment")
public class ShopOrderPaymentController {

	private final static Logger log = Logger.getLogger(ShopOrderPaymentController.class);
	@Autowired(required = false)
	private ShopOrderPaymentService service;

	@RequestMapping(value = "/list")
	public ModelAndView list(ShopOrderPaymentVo vo, HttpServletRequest request) {
		ModelAndView mv = new ModelAndView();

		List<ShopOrderPaymentVo> orderPaymentList = service.list(vo);
		mv.addObject("vo", vo);
		mv.addObject("orderPaymentList", orderPaymentList);
		mv.setViewName("orderPaymentList");

		return mv;
	}

	@RequestMapping(value = "/add")
	public ModelAndView add() throws Exception {
		ModelAndView mv = new ModelAndView();

		mv.setViewName("orderPaymentEdit");
		return mv;
	}

	@RequestMapping(value = "/edit")
	public ModelAndView edit(@RequestParam Integer id) throws Exception {
		ModelAndView mv = new ModelAndView();
		ShopOrderPayment vo = service.queryById(id);
		mv.addObject("vo", vo);
		mv.setViewName("orderPaymentEdit");
		return mv;
	}

	@RequestMapping(value = "/save", method = RequestMethod.POST)
	public void save(ShopOrderPayment po, PrintWriter out) throws Exception {
		String result = "success";
		if (po != null) {
			if (po.getId() == null) {
				service.add(po);
			} else {
				service.updateBySelective(po);
			}
		} else {
			result = "error";
		}

		out.print(result);
		out.close();
	}

	@RequestMapping(value = "/delete")
	public void delete(Integer[] id, PrintWriter out) throws Exception {
		service.delete((Object[]) id);
		out.print("success");
		out.close();
	}

	/*
	 * @RequestMapping(value = "/export2Excel") public void
	 * export2Excel(ShopOrderPaymentVo vo, HttpServletResponse response,
	 * HttpServletRequest request) { try { String filename = "订单支付查询"; filename
	 * = HttpUtil.encodeFilename(request, filename); filename =
	 * DateUtil.dateformat(new Date(), "MM-dd") + filename;
	 * 
	 * XSSFWorkbook wb = service.export2Excel(vo); ExcelUtil.output(response,
	 * filename, wb); } catch (Exception e) { e.printStackTrace(); }
	 * 
	 * }
	 */

}
