package com.flf.controller.app;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.flf.entity.ShopBill;
import com.flf.entity.ShopUser;
import com.flf.service.ShopAccountService;
import com.flf.service.ShopUserService;
import com.flf.util.JSONUtils;


/**
 * @author Arthur
 *
 */
@Controller
@RequestMapping(value = "/shopAccountApp")
public class ShopAccountAppController {

	private final static Logger log = Logger.getLogger(ShopAccountAppController.class);
	
	@Autowired
	private ShopAccountService shopAccountService;
	
	@Autowired
	private ShopUserService shopUserService;
	
	@RequestMapping(value = "/showAccount")
	public void showAccount(Integer id,
			HttpServletResponse response) {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			log.info("查询账户余额");
			
			ShopUser su = shopUserService.queryById(id);
			
			jsonMap.put("user", su);
		} catch (Exception e) {
		
			e.printStackTrace();
		} finally {
			try {
				
				JSONUtils.printObject(jsonMap, response);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	
	/**
	 * 更改账户余额
	 */
	@RequestMapping(value = "/updateAccount")
	public void updateAccount(ShopBill sb,
			HttpServletResponse response) {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			log.info("修改账户账单");

			shopAccountService.update(sb);
			
			ShopUser su = shopUserService.queryById(sb.getUserId());
			
			jsonMap.put("user", su);
		} catch (Exception e) {
		
			e.printStackTrace();
		} finally {
			try {
				
				JSONUtils.printObject(jsonMap, response);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	
	 
	/*
	 * 账户提现
	 */
	@RequestMapping(value = "/clearAccount")
	public void clearAccount(Integer id,HttpServletResponse response) {
		Map<String, Object> jsonMap = new HashMap<String, Object>();
		try {
			log.info("账户提现");
			if(shopAccountService.queryBalance(id) < 200) {
				jsonMap.put("error", "0");
				jsonMap.put("msg", "不足200，提现失败");
			}else {
				shopUserService.updateUserMoney(id);
				
				ShopUser user = shopUserService.queryById(id);
				
				jsonMap.put("user", user);
				jsonMap.put("msg", "提现成功");
			}
			
		} catch (Exception e) {
		
			e.printStackTrace();
		} finally {
			try {
				
				JSONUtils.printObject(jsonMap, response);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		 
	 }

}
